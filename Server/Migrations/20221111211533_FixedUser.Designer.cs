// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAssemblyTest.Server.Data;

#nullable disable

namespace WebAssemblyTest.Server.Migrations
{
    [DbContext(typeof(SwapiDbContext))]
    [Migration("20221111211533_FixedUser")]
    partial class FixedUser
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.11");

            modelBuilder.Entity("WebAssemblyTest.Shared.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Birth_Year")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Hair_Color")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Height")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Mass")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Skin_Color")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("WebAssemblyTest.Shared.Starship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("Cost_In_Credits")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Crew")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Hyperdrive_Rating")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Length")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Max_Atmosphering_Speed")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Passengers")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Starship");
                });

            modelBuilder.Entity("WebAssemblyTest.Shared.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<double>("AutoclickRate")
                        .HasColumnType("REAL");

                    b.Property<int>("ClickRate")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PersonId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("WebAssemblyTest.Shared.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("Cost_In_Credits")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Length")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Max_Atmosphering_Speed")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Passengers")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("WebAssemblyTest.Shared.Starship", b =>
                {
                    b.HasOne("WebAssemblyTest.Shared.User", null)
                        .WithMany("Starships")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("WebAssemblyTest.Shared.User", b =>
                {
                    b.HasOne("WebAssemblyTest.Shared.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("WebAssemblyTest.Shared.Vehicle", b =>
                {
                    b.HasOne("WebAssemblyTest.Shared.User", null)
                        .WithMany("Vehicles")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("WebAssemblyTest.Shared.User", b =>
                {
                    b.Navigation("Starships");

                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
