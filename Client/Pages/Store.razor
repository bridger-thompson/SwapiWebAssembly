@page "/store"
@using WebAssemblyTest.Shared
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using WebAssemblyTest.Client.Services
@attribute [Authorize]
@inject HttpClient Http
@inject SwapiService service

@if (user != null)
{
	<div class="row">
		<div class="col">
			<h1>Store</h1>
		</div>
		<div class="col text-end my-auto">
			<h3>Total Credits: @user.Credits</h3>
		</div>
	</div>
	@if (user.Starships != null)
	{
		<h4 class="mb-0">Starships:</h4>
		<table class="table table-striped">
			<thead>
				<tr>
					<th>Name</th>
					<th>Model</th>
					<th>Cost in Credits</th>
					<th>Length</th>
					<th>Max Speed</th>
					<th>Hyperdrive Rating</th>
					<th>Crew Size</th>
					<th>Passengers</th>
					<th>Purchased</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var starship in user.Starships)
				{
					<tr>
						<td class="align-middle">@starship.Starship.Name</td>
						<td class="align-middle">@starship.Starship.Model</td>
						<td class="align-middle">@starship.Starship.Cost_In_Credits</td>
						<td class="align-middle">@starship.Starship.Length</td>
						<td class="align-middle">@starship.Starship.Max_Atmosphering_Speed</td>
						<td class="align-middle">@starship.Starship.Hyperdrive_Rating</td>
						<td class="align-middle">@starship.Starship.Crew</td>
						<td class="align-middle">@starship.Starship.Passengers</td>
						<td class="align-middle">
							<button class="btn btn-success" disabled="@(@user.Credits < @starship.Starship.Cost_In_Credits)" @onclick="() => PurchaseStarship(starship.Id)">Purchase</button>
						</td>
					</tr>
				}
			</tbody>
		</table>
	}
	else
	{
		<h4 class="my-2">Loading Starships...</h4>
	}
	@if (user.Vehicles != null)
	{
		<h4 class="mb-0 ">Vehicles:</h4>
		<table class="table table-striped">
			<thead>
				<tr>
					<th>Name</th>
					<th>Model</th>
					<th>Cost in Credits</th>
					<th>Length</th>
					<th>Max Speed</th>
					<th>Passengers</th>
					<th>Purchase</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var vehicle in user.Vehicles)
				{
					<tr>
						<td class="align-middle">@vehicle.Vehicle.Name</td>
						<td class="align-middle">@vehicle.Vehicle.Model</td>
						<td class="align-middle">@vehicle.Vehicle.Cost_In_Credits</td>
						<td class="align-middle">@vehicle.Vehicle.Length</td>
						<td class="align-middle">@vehicle.Vehicle.Max_Atmosphering_Speed</td>
						<td class="align-middle">@vehicle.Vehicle.Passengers</td>
						<td class="align-middle">
							<button class="btn btn-success" disabled="@(@user.Credits < @vehicle.Vehicle.Cost_In_Credits)" @onclick="() => PurchaseVehicle(vehicle.Id)">Purchase</button>
						</td>
					</tr>
				}
			</tbody>
		</table>
	}
	else
	{
		<h4>Loading Vehicles...</h4>
	}
}

@code {
	[CascadingParameter]
	private Task<AuthenticationState> authenticationStateTask { get; set; }

	private User user;

	protected override async Task OnInitializedAsync()
	{
		var authState = await authenticationStateTask;
		var name = authState.User.Identity.Name;
		try
		{
			//starships = await service.GetStarshipsFromApi();
			//vehicles = await service.GetVehiclesFromApi();
			user = await service.GetUserFromApi(name);
		}
		catch (AccessTokenNotAvailableException exception)
		{
			exception.Redirect();
		}
	}

	private async Task PurchaseVehicle(int id)
	{
		await service.PurchaseVehicle(id, user.Id);
	}

	private async Task PurchaseStarship(int id)
	{
		await service.PurchaseStarship(id, user.Id);
	}
}
